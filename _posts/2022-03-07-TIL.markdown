---
layout: post
title: 'SVM(Support Vector Machine) 성능 확인'
subtitle: 'SVM의 성능을 확인해보자'
categories: devlog
tags: python
---

# Epsilon과 C의 변화에 따른 SVM의 성능 확인

## 모델링
- 모델을 선언하고 학습하고 평가하는 과정을 진행한다.
- Boston 데이터를 이용하였고, 전처리 과정은 생략하였음.

```python
# 1단계: 불러오기
from sklearn.svm import SVR
from sklearn.metrics import mean_absolute_error, r2_score

# 2단계: 선언하기
model = SVR(kernel='linear', epsilon=0.1)

# 3단계: 학습하기
model.fit(x_train, y_train)

# 4단계: 예측하기
y_pred = model.predict(x_test)

# 5단계: 평가하기
print(mean_absolute_error(y_test, y_pred))
print(r2_score(y_test, y_pred))
```

## Epsilon과 C에 대한 이해

### epsilon에 따른 성능 확인
- SVR 알고리즘에서 epsilon은 마진의 폭으 조절하는 역할을 한다.
- 데이터셋의 특성에 따라 이 값이 영향을 주지 못하는 경우도 많이 있다.

```python
# 비교할 Epsilon 값
chk_ep = [0.0001, 0.001, 0.01, 0.1, 1, 10]

# 시각화
for n in chk_ep:
    model = SVR(kernel='linear', epsilon=n)
    model.fit(x_train, y_train)

    plt.figure(figsize=(15,3))

    # 가중치 시각화
    plt.subplot(1, 3, 1)
    plt.title('Epsilon=' + str(model.epsilon))
    plt.barh(y=list(x), width=model.coef_.reshape(-1))

    # 학습 성능 시각화
    plt.subplot(1, 3, 2)
    plt.title('Train R2=' + str(model.score(x_train, y_train).round(3)))
    plt.plot(y_train.values)
    plt.plot(model.predict(x_train))

    # 평가 성능 시각화
    plt.subplot(1, 3, 3)
    plt.title('Test R2=' + str(model.score(x_test, y_test).round(3)))
    plt.plot(y_test.values)
    plt.plot(model.predict(x_test))

    plt.show()
```

### C 값 변화에 따른 성능
- SVR에서 C 값은 규제(regulization)에 사용된다.
- 규제는 과대적합을 방지하기 위해 강제로 가중치를 조정하는 역할입니다.
- SVR의 규제는 전체 가중치를 조절하는 L2 규제이다.

```python
# 비교할 C 값
chk_c = [0.001, 0.01, 0.1, 1, 10, 100]

# 시각화
for n in chk_c:
    model = SVR(kernel='linear', C=n)
    model.fit(x_train, y_train)

    plt.figure(figsize=(15, 3))

    # 가중치 시각화
    plt.subplot(1, 3, 1)
    plt.title('C=' + str(model.C))
    plt.barh(y=list(x), width=model.coef_.reshape(-1))

    # 학습 성능 시각화
    plt.subplot(1, 3, 2)
    plt.subtitle('Train R2=' + str(model.score(x_train, y_train).round(3)))
    plt.plot(y_train.values)
    plt.plot(model.predict(x_train))

    # 평가 성능 시각화
    plt.subplot(1, 3, 3)
    plt.title('Test R2=' + str(model.score(x_test, y_test).round(3)))
    plt.plot(y_test.values)
    plt.plot(model.predict(x_test))

    plt.show()
```

